libhelpers.c:11:17: warning: ‘struct execargs_t’ declared inside parameter list [enabled by default]
 int exec(struct execargs_t* args) {
                 ^
libhelpers.c:11:17: warning: its scope is only this definition or declaration, which is probably not what you want [enabled by default]
libhelpers.c: In function ‘exec’:
libhelpers.c:11:29: warning: unused parameter ‘args’ [-Wunused-parameter]
 int exec(struct execargs_t* args) {
                             ^
libhelpers.c: At top level:
libhelpers.c:15:36: warning: ‘struct execargs_t’ declared inside parameter list [enabled by default]
 int exec_program(int input, struct execargs_t *program) {
                                    ^
libhelpers.c: In function ‘exec_program’:
libhelpers.c:33:2: warning: passing argument 1 of ‘exec’ from incompatible pointer type [enabled by default]
  exec(program);
  ^
libhelpers.c:11:5: note: expected ‘struct execargs_t *’ but argument is of type ‘struct execargs_t *’
 int exec(struct execargs_t* args) {
     ^
libhelpers.c: At top level:
libhelpers.c:38:21: warning: ‘struct execargs_t’ declared inside parameter list [enabled by default]
 int runpiped(struct execargs_t **programs, size_t n) {
                     ^
libhelpers.c: In function ‘runpiped’:
libhelpers.c:40:42: error: dereferencing pointer to incomplete type
  printf("programs[0] = %s\n", (*programs)->file);
                                          ^
libhelpers.c:51:4: warning: passing argument 2 of ‘exec_program’ from incompatible pointer type [enabled by default]
    current_input = exec_program(current_input, *(programs + i));
    ^
libhelpers.c:15:5: note: expected ‘struct execargs_t *’ but argument is of type ‘struct execargs_t *’
 int exec_program(int input, struct execargs_t *program) {
     ^
make[1]: *** [libhelpers] Ошибка 1
make: *** [simplesh] Ошибка 2
